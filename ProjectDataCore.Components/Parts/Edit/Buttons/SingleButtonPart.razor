@inherits ButtonBase

@if(!Editing)
{
	<AuthorizationHandler Settings="ComponentData">
		<Authorized>
			<DisplayBox>
				<Contnet>
					<div class="grid gird-cols-1 gap-2">
						@if (ComponentData is not null)
						{
							<button class="@ComponentData.GetColorClasses()" @onclick="OnClickAsync">@ComponentData.DisplayName</button>
						}
						else
						{
							<span>No button data found.</span>
						}
					</div>
				</Contnet>
			</DisplayBox>
		</Authorized>
	</AuthorizationHandler>
}
else
{
	<div class="part-edit-container">
		<DisplayBox>
			<Contnet>
				@if (AuthSettings)
				{
					<ComponentAuthorizationEditForm ComponentData="ComponentData" OnSettingsClose="ToggleAuthSettingsPanelAsync" />
				}
				else if (EditingSettings)
				{
					<EditForm Model="this" class="grid grid-cols-1 grid-flow-row-dense gap-2">
						<div class="input-group">
							<InputText @bind-Value="DisplayNameEdit" id="color-selector" class="input-control peer" placeholer="Display Name" />
							<label for="color-selector">Display Name</label>
						</div>
						<div class="input-group">
							<InputEnumSelect @bind-Value="ButtonStyle" id="color-selector" class="input-control peer" />
							<label for="color-selector">Button Style</label>
						</div>
						<div class="grid grid-cols-2 grid-rows-1 gap-2">
							<label class="inline-flex items-center">
								<InputCheckbox @bind-Value="CallFormSubmit" />
								<span class="ml-2">Call Form Submit</span>
							</label>
							<label class="inline-flex items-center">
								<InputCheckbox @bind-Value="CallFormCancel" />
								<span class="ml-2">Call Form Clear</span>
							</label>
						</div>
						<div class="inline-flex gap-2">
							<button @onclick="SaveEdit" class="button-op-success flex-grow">Save</button>
							<button @onclick="CancelEdit" class="button-op-danger flex-grow">Cancel</button>
						</div>
					</EditForm>
				}
				else if(ComponentData is not null)
				{
					<div class="grid grid-cols-1 grid-flow-row-dense gap-2">
						<button class="@ComponentData.GetColorClasses()">@ComponentData.DisplayName</button>
						<button class="button-op-success" @onclick="StartEdit">Edit Button Data</button>
					</div>
				}
				else
				{
					<span>No button data found</span>
				}
			</Contnet>
		</DisplayBox>
		<button class="absolute top-0 right-0 p-2 rounded-lg bg-red-500" @onclick="RemoveCurrentDisplay">Remove Display</button>

		<button class="absolute bottom-0 left-0 p-2 rounded-lg bg-blue-500"
			@onclick="ToggleAuthSettingsPanelAsync">
			<span class="material-icons-round">settings</span>
		</button>
	</div>
}