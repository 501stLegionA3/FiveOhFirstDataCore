@inherits EditBase

@if(!Editing)
{
	<AuthorizationHandler Settings="ComponentData">
		<Authorized>
			<DisplayBox>
				<Contnet>
					<EditForm Model="this">
						<div class="input-group">
							@if(ComponentData.StaticProperty)
							{
								<InputText @bind-Value="StaticValue" class="input-control peer" placeholder="@ComponentData.Label" />
								<label for="option-name" class="input-label">@ComponentData.Label</label>
							}
							else
							{
								<AssignableValueEditor EditModel="this" SelectedValues="SelectedValues" />
							}
						</div>
					</EditForm>
				</Contnet>
			</DisplayBox>
		</Authorized>
	</AuthorizationHandler>
}
else
{
	<div class="part-edit-container">
		<DisplayBox>
			<Contnet>
				@if (AuthSettings)
				{
					<ComponentAuthorizationEditForm ComponentData="ComponentData" OnSettingsClose="ToggleAuthSettingsPanelAsync" />
				}
				else if (EditModel is not null)
				{
					<EditForm Context="DisplayEditContext" Model="EditModel">
						<div class="p-3 input-group">
							<InputText id="edit-label" class="input-control" @bind-Value="EditModel.Label" />
							<label class="input-label" for="edit-label">Display Label</label>
						</div>
						<hr />
						<div class="p-3">
							<UserPropertySelector SetPropertyName="x => EditModel.Property = x" 
								SetPropertyType="x => EditModel.StaticProperty = x" 
								User="ScopedUsers?.FirstOrDefault()" UseStaticProperties="EditModel.StaticProperty"
								PropertyName="@EditModel.Property" AllowedStaticTypes="AllowedStaticTypes" />
						</div>
						<hr />
						<div class="p-3 input-group">
							<InputSelect id="edit-scope" class="input-control" TValue="Guid?"
								Value="UserScopeSelection" ValueChanged="OnUserScopeChanged" ValueExpression="() => UserScopeSelection">
								<ScopedComponentsSelectOptions />
							</InputSelect>
							<label class="input-label" for="edit-scope">User Scope Selector</label>
						</div>
						<hr />
						<div class="p-3">
							<button class="rounded-lg p-2 bg-green-400" @onclick="SaveEdit">Save</button>
							<button class="rounded-lg p-2 bg-red-500" @onclick="CancelEdit">Cancel</button>
						</div>
					</EditForm>
				}
				else
				{
					<EditForm Model="this">
						<div class="input-group">
							@if(ComponentData.StaticProperty)
							{
								<InputText @bind-Value="StaticValue" class="input-control peer" placeholder="@ComponentData.Label" />
								<label for="option-name" class="input-label">@ComponentData.Label</label>
							}
							else
							{
								<AssignableValueEditor EditModel="this" SelectedValues="SelectedValues" />
							}
						</div>
					</EditForm>

					<button class="absolute top-1 left-1" @onclick="StartEdit">
						Edit
					</button>
				}
			</Contnet>
		</DisplayBox>
		<button class="absolute top-0 right-0 p-2 rounded-lg bg-red-500" @onclick="RemoveCurrentDisplay">Remove Display</button>

        <button class="absolute bottom-0 left-0 p-2 rounded-lg bg-blue-500"
            @onclick="ToggleAuthSettingsPanelAsync">
            <span class="material-icons-round">settings</span>
        </button>
	</div>
}