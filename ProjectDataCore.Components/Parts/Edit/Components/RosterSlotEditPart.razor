@inherits EditBase

<DisplayBox>
	<Contnet>
		@if(Editing)
		{

		}
		else if (ComponentData is not null)
		{
			<EditForm Model="this">
				<div class="grid grid-cols-1 grid-flow-row-dense gap-2">

					<div class="flex-grow inline-flex gap-2 p-2 w-full text-center">
						<button class="flex border border-op_danger hover:bg-op_danger hover:text-op_danger_t">
							<span class="material-icons-round">person_remove</span>
						</button>

						<div class="flex-grow grid grid-cols-1 grid-flow-row-dense gap-2 input-group">
							<InputSelect Value="SelectedDisplay" ValueExpression="() => SelectedDisplay"
								TValue="int" ValueChanged="OnSelectedDisplayChangedAsync">
								<option value="-1">n/a</option>
								@for(int i = 0; i < ComponentData.EditableDisplays.Count; i++)
								{
									<option value="@i">@ComponentData.EditableDisplays[i].Name</option>
								}
							</InputSelect>
							<label class="input-label" for="">Roster Display Selector</label>
						</div>

						<div class="flex-grow grid grid-cols-1 grid-flow-row-dense gap-2 input-group transition-all invisible">
							<InputSelect Value="SelectedTree" ValueExpression="() => SelectedTree"
								TValue="int" ValueChanged="OnSelectedTreeChanged">
								<option value="-1">n/a</option>
								@for(int i = 0; i < DisplayTrees.Count; i++)
								{
									<option value="@i">@DisplayTrees[i].Name</option>
								}
							</InputSelect>
							<label class="input-label" for="">>Roster Tree Selector</label>
						</div>

						<div class="flex-grow grid grid-cols-1 grid-flow-row-dense gap-2 input-group transition-all invisible ">
							<InputSelect Value="SelectedSlot" ValueExpression="() => SelectedSlot"
								TValue="int" ValueChanged="OnSelectedSlotChanged">
								<option value="-1">n/a</option>
								@for(int i = 0; i < RosterSlots.Count; i++)
								{
									<option value="@i">@RosterSlots[i].Name</option>
								}
							</InputSelect>
							<label class="input-label" for="">>Roster Slot Selector</label>
						</div>
					</div>

				</div>
			</EditForm>
		}
	</Contnet>
</DisplayBox>