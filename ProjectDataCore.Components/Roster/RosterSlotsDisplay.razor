@if(Editing)
{
    if (Slots.Count == DisplayValues.Length)
    {
        <div class="grid grid-cols-1 mx-4 bg-white mb-10 relative">
            @for(int i = 0; i < Slots.Count; i++)
            {
                var pa = Slots[i];
                <div class="relative group grid grid-cols-2">
                    @if (ConfirmDelete != pa)
                    {
                        if (SlotToEdit != pa)
                        {
                            <div class="text-right p-2 border-r @(Depth > 2 ? "border-rostert" : 
                            Depth > 1 ? "border-rosters" : "border-rosterp")">@pa.Name</div>
                        }
                        else
                        {
                            <div class="p-2 border-r @(Depth > 2 ? "border-rostert" : 
                                Depth > 1 ? "border-rosters" : "border-rosterp")">
                                <EditForm Model="this" class="grid grid-cols-10">
                                    <button class="border border-op_danger hover:bg-op_danger hover:text-op_danger_t material-icons-round"
                                        @onclick="() => OnEditSlot(null)">
                                        close
                                    </button>
                                    <button class="border border-op_success hover:bg-op_success hover:text-op_success_t material-icons-round"
                                        @onclick="OnSaveSlotEdit">
                                        save
                                    </button>
                                    <InputText class="text-right text-black col-span-8 border border-util_action" @bind-Value="EditSlotName" />
                                </EditForm>
                            </div>
                        }
                        <div class="text-left p-2">@DisplayValues[i]</div>
                    }
                    else
                    {
                        <div class="text-center p-2">
                            <button class="border border-op_success hover:bg-op_success hover:text-op_success_t w-full"
                                @onclick="() => OnStartDelete(null)">
                                Cancel Delete Action
                            </button>
                        </div>
                        <div class="text-center p-2 grid grid-cols-2 gap-2">
                            <div>
                                @pa.Name
                            </div>
                            <button class="border border-op_danger hover:bg-op_danger hover:text-op_danger_t"
                                @onclick="OnDeleteSlot">
                                Confirm Delete Action
                            </button>
                        </div>
                    }

                    @if(ConfirmDelete is null && SlotToEdit is null)
                    {
                        @*Move Up*@
                        <div class="hidden group-hover:block absolute top-0 right-0 w-8 h-8 rounded-l-lg 
                            bg-util_action text-util_action_t">
                            <button class="material-icons-round"
                                @onclick="async () => await OnSlotMoveUp(pa)">
                                expand_less
                            </button>
                        </div>

                        @*Move Down*@
                        <div class="hidden group-hover:block absolute bottom-0 right-10 w-8 h-8 rounded-lg 
                            bg-util_action text-util_action_t">
                            <button class="material-icons-round"
                                @onclick="async () => await OnSlotMoveDown(pa)">
                                expand_more
                            </button>
                        </div>

                        @*Edit*@
                        <div class="hidden group-hover:block absolute bottom-0 left-20 w-8 h-8 rounded-lg
                            bg-util_action text-util_action_t">
                            <button class="material-icons-round"
                                @onclick="() => OnEditSlot(pa)">
                                edit
                            </button>
                        </div>

                        @*Delete*@
                        <div class="hidden group-hover:block absolute top-0 left-0 w-8 h-8 rounded-r-lg
                            bg-op_danger text-op_danger_t">
                            <button class="material-icons-round"
                                @onclick="() => OnStartDelete(pa)">
                                delete
                            </button>
                        </div>
                    }
                </div>
            }

            <div class="absolute -bottom-8 left-10 rounded-b-lg bg-util_action text-util_action_t hover:bg-op_success hover:text-op_success_t">
                <EditForm class="grid grid-cols-5 grid-rows-1" Model="this">
                    <InputText class="col-span-4 rounded-b-lg p-1 text-black focus:ring-0" placeholder="Roster Slot Name" @bind-Value="NewRosterSlotName" />
                    <button class="material-icons-round"
                        @onclick="OnAddRosterSlot">
                        add
                    </button>
                </EditForm>
            </div>
        </div>
    }
}
else
{
    if (Slots.Count == DisplayValues.Length)
    {
        <div class="grid grid-cols-2 mx-4 bg-white">
            @for (int i = 0; i < Slots.Count; i++)
            {
                <div class="text-right p-2 border-r @(Depth > 2 ? "border-rostert" : 
                    Depth > 1 ? "border-rosters" : "border-rosterp")">@Slots[i].Name</div>
                <div class="text-left p-2">@DisplayValues[i]</div>
            }
        </div>
    }
}