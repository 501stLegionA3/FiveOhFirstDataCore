@using ProjectDataCore.Data.Structures.Nav
<li class="top-link group">
    @if (Module.HasMainPage) //If the Module has a main page make the top button clickable
    {
        <button class="has-dropdown">
            <NavLink href="@Module.Href" @onclick="() => Navigate(Module.Href)">@Module.DisplayName</NavLink>
        </button>
    }
    else
    {
        <button class="has-dropdown">@Module.DisplayName</button>
    }
    <ul class="dropdown">
        @foreach (var sM in Module.SubModules) //List all sub Modules
        {
            var subModule = sM;
            <AuthorizationHandler ForceAdmin="subModule.IsAdmin" Settings="new(){AuthorizationPolicyKey=subModule.AuthKey, RequireAuth=subModule.IsAdmin||(subModule.AuthKey is not null)}">
                <Authorized>
                    @if (subModule.SubModules.Count > 0) //If the sub Module has sub Modules list them 1 deep
                    {
                        <li class="drLink relative">
                            @if (subModule.HasMainPage)
                            {
                                <button class="has-dropdown">
                                    <NavLink href="@subModule.Href" @onclick="() => Navigate(subModule.Href)">@subModule.DisplayName</NavLink>
                                </button>
                            }
                            else
                            {
                                <button class="has-dropdown">@subModule.DisplayName</button>
                            }
                            <ul class="nested">
                                @foreach (var l in subModule.SubModules)
                                {
                                    var link = l;
                                    <li class="drLink">
                                        <NavLink href="@link.Href" @onclick="() => Navigate(link.Href)">@link.DisplayName</NavLink>
                                    </li>
                                }
                            </ul>
                        </li>
                    }
                    else
                    {
                        <li class="drLink">
                            <NavLink href="@subModule.Href" @onclick="() => Navigate(subModule.Href)">@subModule.DisplayName</NavLink>
                        </li>
                    }
                </Authorized>
                <NotAuthorized></NotAuthorized>
            </AuthorizationHandler>
        }
    </ul>
</li>
@foreach (var sM in Module.SubModules)
{
    var subModule = sM;
    @if (URI.Contains(subModule.Href??"") && subModule.SubModules.Count > 0)
    {
        <ModuleDisplay Module="subModule"/>
    }
}