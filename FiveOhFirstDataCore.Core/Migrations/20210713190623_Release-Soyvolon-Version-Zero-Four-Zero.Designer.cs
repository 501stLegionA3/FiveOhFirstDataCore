// <auto-generated />
using System;
using System.Collections.Generic;
using FiveOhFirstDataCore.Core.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace FiveOhFirstDataCore.Core.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210713190623_Release-Soyvolon-Version-Zero-Four-Zero")]
    partial class ReleaseSoyvolonVersionZeroFourZero
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "6.0.0-preview.3.21201.2")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("DisciplinaryActionTrooper", b =>
                {
                    b.Property<Guid>("WitnessedDisciplinaryActionsDAID")
                        .HasColumnType("uuid");

                    b.Property<int>("WitnessesId")
                        .HasColumnType("integer");

                    b.HasKey("WitnessedDisciplinaryActionsDAID", "WitnessesId");

                    b.HasIndex("WitnessesId");

                    b.ToTable("DisciplinaryActionTrooper");
                });

            modelBuilder.Entity("FiveOhFirstDataCore.Core.Account.Detail.DisciplinaryAction", b =>
                {
                    b.Property<Guid>("DAID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("ActionTaken")
                        .HasColumnType("boolean");

                    b.Property<int>("FiledAgainstId")
                        .HasColumnType("integer");

                    b.Property<int>("FiledById")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FiledOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("FiledToId")
                        .HasColumnType("integer");

                    b.Property<string>("IncidentReport")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("OccurredOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Recommendation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Situation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("WillTakeAction")
                        .HasColumnType("boolean");

                    b.HasKey("DAID");

                    b.HasIndex("FiledAgainstId");

                    b.HasIndex("FiledById");

                    b.HasIndex("FiledToId");

                    b.ToTable("DisciplinaryActions");
                });

            modelBuilder.Entity("FiveOhFirstDataCore.Core.Account.RecruitStatus", b =>
                {
                    b.Property<Guid>("RecruitStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<bool>("ModsInstalled")
                        .HasColumnType("boolean");

                    b.Property<bool>("OverSixteen")
                        .HasColumnType("boolean");

                    b.Property<bool>("PossibleTroll")
                        .HasColumnType("boolean");

                    b.Property<int>("PreferredRole")
                        .HasColumnType("integer");

                    b.Property<int>("TrooperId")
                        .HasColumnType("integer");

                    b.HasKey("RecruitStatusId");

                    b.HasIndex("TrooperId")
                        .IsUnique();

                    b.ToTable("RecruitStatuses");
                });

            modelBuilder.Entity("FiveOhFirstDataCore.Core.Account.Trooper", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("AccessCode")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<long>("CShops")
                        .HasColumnType("bigint");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("DiscordId")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<int?>("Flight")
                        .HasColumnType("integer");

                    b.Property<DateTime>("GraduatedBCTOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("GraduatedUTCOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("InitialTraining")
                        .HasColumnType("text");

                    b.Property<DateTime>("LastBilletChange")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("LastPromotion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("MedicRank")
                        .HasColumnType("integer");

                    b.Property<bool>("MilitaryPolice")
                        .HasColumnType("boolean");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<List<Guid>>("NotificationItems")
                        .IsRequired()
                        .HasColumnType("uuid[]");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<int?>("PilotRank")
                        .HasColumnType("integer");

                    b.Property<long>("Qualifications")
                        .HasColumnType("bigint");

                    b.Property<int?>("RTORank")
                        .HasColumnType("integer");

                    b.Property<int?>("Rank")
                        .HasColumnType("integer");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<int>("Slot")
                        .HasColumnType("integer");

                    b.Property<DateTime>("StartOfService")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("SteamLink")
                        .HasColumnType("text");

                    b.Property<int?>("Team")
                        .HasColumnType("integer");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UTC")
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<int?>("WardenRank")
                        .HasColumnType("integer");

                    b.Property<int?>("WarrantRank")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("FiveOhFirstDataCore.Core.Account.TrooperRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("FiveOhFirstDataCore.Core.Data.Notice.Notice", b =>
                {
                    b.Property<Guid>("NoticeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int?>("AuthorId")
                        .HasColumnType("integer");

                    b.Property<string>("Contents")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<string>("NoticeBoardName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("PostedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Sticky")
                        .HasColumnType("boolean");

                    b.HasKey("NoticeId");

                    b.HasIndex("AuthorId");

                    b.HasIndex("NoticeBoardName");

                    b.ToTable("Notices");
                });

            modelBuilder.Entity("FiveOhFirstDataCore.Core.Data.Notice.NoticeBoardData", b =>
                {
                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.HasKey("Location");

                    b.ToTable("NoticeBoards");
                });

            modelBuilder.Entity("FiveOhFirstDataCore.Core.Structures.TrooperFlag", b =>
                {
                    b.Property<Guid>("FlagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int?>("AuthorId")
                        .HasColumnType("integer");

                    b.Property<string>("Contents")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("FlagForId")
                        .HasColumnType("integer");

                    b.HasKey("FlagId");

                    b.HasIndex("AuthorId");

                    b.HasIndex("FlagForId");

                    b.ToTable("TrooperFlags");
                });

            modelBuilder.Entity("FiveOhFirstDataCore.Core.Structures.Updates.CShopUpdate", b =>
                {
                    b.Property<Guid>("ChangeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<long>("Added")
                        .HasColumnType("bigint");

                    b.Property<int?>("ChangedById")
                        .HasColumnType("integer");

                    b.Property<int>("ChangedForId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ChangedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("OldCShops")
                        .HasColumnType("bigint");

                    b.Property<long>("Removed")
                        .HasColumnType("bigint");

                    b.Property<bool>("RevertChange")
                        .HasColumnType("boolean");

                    b.Property<bool>("SubmittedByRosterClerk")
                        .HasColumnType("boolean");

                    b.HasKey("ChangeId");

                    b.HasIndex("ChangedById");

                    b.HasIndex("ChangedForId");

                    b.ToTable("CShopUpdates");
                });

            modelBuilder.Entity("FiveOhFirstDataCore.Core.Structures.Updates.ClaimUpdate", b =>
                {
                    b.Property<Guid>("ChangeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("AutomaticChange")
                        .HasColumnType("boolean");

                    b.Property<int?>("ChangedById")
                        .HasColumnType("integer");

                    b.Property<int>("ChangedForId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ChangedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("RevertChange")
                        .HasColumnType("boolean");

                    b.Property<bool>("SubmittedByRosterClerk")
                        .HasColumnType("boolean");

                    b.HasKey("ChangeId");

                    b.HasIndex("ChangedById");

                    b.HasIndex("ChangedForId");

                    b.ToTable("ClaimUpdates");
                });

            modelBuilder.Entity("FiveOhFirstDataCore.Core.Structures.Updates.ClaimUpdateData", b =>
                {
                    b.Property<Guid>("UpdateKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClaimUpdateChangeId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClaimUpdateChangeId1")
                        .HasColumnType("uuid");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UpdateKey");

                    b.HasIndex("ClaimUpdateChangeId");

                    b.HasIndex("ClaimUpdateChangeId1");

                    b.ToTable("ClaimUpdateData");
                });

            modelBuilder.Entity("FiveOhFirstDataCore.Core.Structures.Updates.NickNameUpdate", b =>
                {
                    b.Property<Guid>("ChangeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int?>("ApprovedById")
                        .HasColumnType("integer");

                    b.Property<int>("ChangedForId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ChangedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("NewNickname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OldNickname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("RevertChange")
                        .HasColumnType("boolean");

                    b.Property<bool>("SubmittedByRosterClerk")
                        .HasColumnType("boolean");

                    b.HasKey("ChangeId");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("ChangedForId");

                    b.ToTable("NickNameUpdate");
                });

            modelBuilder.Entity("FiveOhFirstDataCore.Core.Structures.Updates.QualificationUpdate", b =>
                {
                    b.Property<Guid>("ChangeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<long>("Added")
                        .HasColumnType("bigint");

                    b.Property<int>("ChangedForId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ChangedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("OldQualifications")
                        .HasColumnType("bigint");

                    b.Property<long>("Removed")
                        .HasColumnType("bigint");

                    b.Property<bool>("RevertChange")
                        .HasColumnType("boolean");

                    b.Property<bool>("Revoked")
                        .HasColumnType("boolean");

                    b.Property<bool>("SubmittedByRosterClerk")
                        .HasColumnType("boolean");

                    b.HasKey("ChangeId");

                    b.HasIndex("ChangedForId");

                    b.ToTable("QualificationUpdates");
                });

            modelBuilder.Entity("FiveOhFirstDataCore.Core.Structures.Updates.RankUpdate", b =>
                {
                    b.Property<Guid>("ChangeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int?>("ChangedById")
                        .HasColumnType("integer");

                    b.Property<int>("ChangedForId")
                        .HasColumnType("integer");

                    b.Property<int>("ChangedFrom")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ChangedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("ChangedTo")
                        .HasColumnType("integer");

                    b.Property<bool>("RevertChange")
                        .HasColumnType("boolean");

                    b.Property<bool>("SubmittedByRosterClerk")
                        .HasColumnType("boolean");

                    b.HasKey("ChangeId");

                    b.HasIndex("ChangedById");

                    b.HasIndex("ChangedForId");

                    b.ToTable("RankUpdates");
                });

            modelBuilder.Entity("FiveOhFirstDataCore.Core.Structures.Updates.RecruitmentUpdate", b =>
                {
                    b.Property<Guid>("ChangeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("ChangedForId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ChangedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("RecruitedById")
                        .HasColumnType("integer");

                    b.Property<bool>("RevertChange")
                        .HasColumnType("boolean");

                    b.Property<bool>("SubmittedByRosterClerk")
                        .HasColumnType("boolean");

                    b.HasKey("ChangeId");

                    b.HasIndex("ChangedForId")
                        .IsUnique();

                    b.HasIndex("RecruitedById");

                    b.ToTable("RecruitmentUpdates");
                });

            modelBuilder.Entity("FiveOhFirstDataCore.Core.Structures.Updates.SlotUpdate", b =>
                {
                    b.Property<Guid>("ChangeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("ChangedForId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ChangedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("NewFlight")
                        .HasColumnType("integer");

                    b.Property<int?>("NewRole")
                        .HasColumnType("integer");

                    b.Property<int>("NewSlot")
                        .HasColumnType("integer");

                    b.Property<int?>("NewTeam")
                        .HasColumnType("integer");

                    b.Property<int?>("OldFlight")
                        .HasColumnType("integer");

                    b.Property<int?>("OldRole")
                        .HasColumnType("integer");

                    b.Property<int>("OldSlot")
                        .HasColumnType("integer");

                    b.Property<int?>("OldTeam")
                        .HasColumnType("integer");

                    b.Property<bool>("RevertChange")
                        .HasColumnType("boolean");

                    b.Property<bool>("SubmittedByRosterClerk")
                        .HasColumnType("boolean");

                    b.HasKey("ChangeId");

                    b.HasIndex("ChangedForId");

                    b.ToTable("SlotUpdates");
                });

            modelBuilder.Entity("FiveOhFirstDataCore.Core.Structures.Updates.TimeUpdate", b =>
                {
                    b.Property<Guid>("ChangeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int?>("ChangedById")
                        .HasColumnType("integer");

                    b.Property<int>("ChangedForId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ChangedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("NewBilletChange")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("NewGraduatedBCT")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("NewGraduatedUTC")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("NewPromotion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("NewStartOfService")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("OldBilletChange")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("OldGraduatedBCT")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("OldGraduatedUTC")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("OldPromotion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("OldStartOfService")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("RevertChange")
                        .HasColumnType("boolean");

                    b.Property<bool>("SubmittedByRosterClerk")
                        .HasColumnType("boolean");

                    b.HasKey("ChangeId");

                    b.HasIndex("ChangedById");

                    b.HasIndex("ChangedForId");

                    b.ToTable("TimeUpdates");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("QualificationUpdateTrooper", b =>
                {
                    b.Property<int>("InstructorsId")
                        .HasColumnType("integer");

                    b.Property<Guid>("SubmittedQualificationUpdatesChangeId")
                        .HasColumnType("uuid");

                    b.HasKey("InstructorsId", "SubmittedQualificationUpdatesChangeId");

                    b.HasIndex("SubmittedQualificationUpdatesChangeId");

                    b.ToTable("QualificationUpdateTrooper");
                });

            modelBuilder.Entity("SlotUpdateTrooper", b =>
                {
                    b.Property<int>("ApprovedById")
                        .HasColumnType("integer");

                    b.Property<Guid>("ApprovedSlotUpdatesChangeId")
                        .HasColumnType("uuid");

                    b.HasKey("ApprovedById", "ApprovedSlotUpdatesChangeId");

                    b.HasIndex("ApprovedSlotUpdatesChangeId");

                    b.ToTable("SlotUpdateTrooper");
                });

            modelBuilder.Entity("DisciplinaryActionTrooper", b =>
                {
                    b.HasOne("FiveOhFirstDataCore.Core.Account.Detail.DisciplinaryAction", null)
                        .WithMany()
                        .HasForeignKey("WitnessedDisciplinaryActionsDAID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FiveOhFirstDataCore.Core.Account.Trooper", null)
                        .WithMany()
                        .HasForeignKey("WitnessesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FiveOhFirstDataCore.Core.Account.Detail.DisciplinaryAction", b =>
                {
                    b.HasOne("FiveOhFirstDataCore.Core.Account.Trooper", "FiledAgainst")
                        .WithMany("DisciplinaryActions")
                        .HasForeignKey("FiledAgainstId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FiveOhFirstDataCore.Core.Account.Trooper", "FiledBy")
                        .WithMany("FiledDisciplinaryActions")
                        .HasForeignKey("FiledById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FiveOhFirstDataCore.Core.Account.Trooper", "FiledTo")
                        .WithMany("DisciplinaryActionInbox")
                        .HasForeignKey("FiledToId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FiledAgainst");

                    b.Navigation("FiledBy");

                    b.Navigation("FiledTo");
                });

            modelBuilder.Entity("FiveOhFirstDataCore.Core.Account.RecruitStatus", b =>
                {
                    b.HasOne("FiveOhFirstDataCore.Core.Account.Trooper", "Trooper")
                        .WithOne("RecruitStatus")
                        .HasForeignKey("FiveOhFirstDataCore.Core.Account.RecruitStatus", "TrooperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trooper");
                });

            modelBuilder.Entity("FiveOhFirstDataCore.Core.Data.Notice.Notice", b =>
                {
                    b.HasOne("FiveOhFirstDataCore.Core.Account.Trooper", "Author")
                        .WithMany("NoticesWritten")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("FiveOhFirstDataCore.Core.Data.Notice.NoticeBoardData", "NoticeBoard")
                        .WithMany("Notices")
                        .HasForeignKey("NoticeBoardName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("NoticeBoard");
                });

            modelBuilder.Entity("FiveOhFirstDataCore.Core.Structures.TrooperFlag", b =>
                {
                    b.HasOne("FiveOhFirstDataCore.Core.Account.Trooper", "Author")
                        .WithMany("CreatedFlags")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("FiveOhFirstDataCore.Core.Account.Trooper", "FlagFor")
                        .WithMany("Flags")
                        .HasForeignKey("FlagForId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("FlagFor");
                });

            modelBuilder.Entity("FiveOhFirstDataCore.Core.Structures.Updates.CShopUpdate", b =>
                {
                    b.HasOne("FiveOhFirstDataCore.Core.Account.Trooper", "ChangedBy")
                        .WithMany("SubmittedCShopUpdates")
                        .HasForeignKey("ChangedById")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("FiveOhFirstDataCore.Core.Account.Trooper", "ChangedFor")
                        .WithMany("CShopUpdates")
                        .HasForeignKey("ChangedForId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChangedBy");

                    b.Navigation("ChangedFor");
                });

            modelBuilder.Entity("FiveOhFirstDataCore.Core.Structures.Updates.ClaimUpdate", b =>
                {
                    b.HasOne("FiveOhFirstDataCore.Core.Account.Trooper", "ChangedBy")
                        .WithMany("AuthorizedClaimUpdates")
                        .HasForeignKey("ChangedById")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("FiveOhFirstDataCore.Core.Account.Trooper", "ChangedFor")
                        .WithMany("ClaimUpdates")
                        .HasForeignKey("ChangedForId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChangedBy");

                    b.Navigation("ChangedFor");
                });

            modelBuilder.Entity("FiveOhFirstDataCore.Core.Structures.Updates.ClaimUpdateData", b =>
                {
                    b.HasOne("FiveOhFirstDataCore.Core.Structures.Updates.ClaimUpdate", null)
                        .WithMany("Additions")
                        .HasForeignKey("ClaimUpdateChangeId");

                    b.HasOne("FiveOhFirstDataCore.Core.Structures.Updates.ClaimUpdate", null)
                        .WithMany("Removals")
                        .HasForeignKey("ClaimUpdateChangeId1");
                });

            modelBuilder.Entity("FiveOhFirstDataCore.Core.Structures.Updates.NickNameUpdate", b =>
                {
                    b.HasOne("FiveOhFirstDataCore.Core.Account.Trooper", "ApprovedBy")
                        .WithMany("ApprovedNickNameUpdates")
                        .HasForeignKey("ApprovedById")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("FiveOhFirstDataCore.Core.Account.Trooper", "ChangedFor")
                        .WithMany("NickNameUpdates")
                        .HasForeignKey("ChangedForId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApprovedBy");

                    b.Navigation("ChangedFor");
                });

            modelBuilder.Entity("FiveOhFirstDataCore.Core.Structures.Updates.QualificationUpdate", b =>
                {
                    b.HasOne("FiveOhFirstDataCore.Core.Account.Trooper", "ChangedFor")
                        .WithMany("QualificationUpdates")
                        .HasForeignKey("ChangedForId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChangedFor");
                });

            modelBuilder.Entity("FiveOhFirstDataCore.Core.Structures.Updates.RankUpdate", b =>
                {
                    b.HasOne("FiveOhFirstDataCore.Core.Account.Trooper", "ChangedBy")
                        .WithMany("SubmittedRankUpdates")
                        .HasForeignKey("ChangedById")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("FiveOhFirstDataCore.Core.Account.Trooper", "ChangedFor")
                        .WithMany("RankChanges")
                        .HasForeignKey("ChangedForId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChangedBy");

                    b.Navigation("ChangedFor");
                });

            modelBuilder.Entity("FiveOhFirstDataCore.Core.Structures.Updates.RecruitmentUpdate", b =>
                {
                    b.HasOne("FiveOhFirstDataCore.Core.Account.Trooper", "ChangedFor")
                        .WithOne("RecruitedByData")
                        .HasForeignKey("FiveOhFirstDataCore.Core.Structures.Updates.RecruitmentUpdate", "ChangedForId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FiveOhFirstDataCore.Core.Account.Trooper", "RecruitedBy")
                        .WithMany("Recruitments")
                        .HasForeignKey("RecruitedById")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("ChangedFor");

                    b.Navigation("RecruitedBy");
                });

            modelBuilder.Entity("FiveOhFirstDataCore.Core.Structures.Updates.SlotUpdate", b =>
                {
                    b.HasOne("FiveOhFirstDataCore.Core.Account.Trooper", "ChangedFor")
                        .WithMany("SlotUpdates")
                        .HasForeignKey("ChangedForId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChangedFor");
                });

            modelBuilder.Entity("FiveOhFirstDataCore.Core.Structures.Updates.TimeUpdate", b =>
                {
                    b.HasOne("FiveOhFirstDataCore.Core.Account.Trooper", "ChangedBy")
                        .WithMany("ApprovedTimeUpdates")
                        .HasForeignKey("ChangedById")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("FiveOhFirstDataCore.Core.Account.Trooper", "ChangedFor")
                        .WithMany("TimeUpdates")
                        .HasForeignKey("ChangedForId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChangedBy");

                    b.Navigation("ChangedFor");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("FiveOhFirstDataCore.Core.Account.TrooperRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("FiveOhFirstDataCore.Core.Account.Trooper", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("FiveOhFirstDataCore.Core.Account.Trooper", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("FiveOhFirstDataCore.Core.Account.TrooperRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FiveOhFirstDataCore.Core.Account.Trooper", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("FiveOhFirstDataCore.Core.Account.Trooper", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("QualificationUpdateTrooper", b =>
                {
                    b.HasOne("FiveOhFirstDataCore.Core.Account.Trooper", null)
                        .WithMany()
                        .HasForeignKey("InstructorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FiveOhFirstDataCore.Core.Structures.Updates.QualificationUpdate", null)
                        .WithMany()
                        .HasForeignKey("SubmittedQualificationUpdatesChangeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SlotUpdateTrooper", b =>
                {
                    b.HasOne("FiveOhFirstDataCore.Core.Account.Trooper", null)
                        .WithMany()
                        .HasForeignKey("ApprovedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FiveOhFirstDataCore.Core.Structures.Updates.SlotUpdate", null)
                        .WithMany()
                        .HasForeignKey("ApprovedSlotUpdatesChangeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FiveOhFirstDataCore.Core.Account.Trooper", b =>
                {
                    b.Navigation("ApprovedNickNameUpdates");

                    b.Navigation("ApprovedTimeUpdates");

                    b.Navigation("AuthorizedClaimUpdates");

                    b.Navigation("CShopUpdates");

                    b.Navigation("ClaimUpdates");

                    b.Navigation("CreatedFlags");

                    b.Navigation("DisciplinaryActionInbox");

                    b.Navigation("DisciplinaryActions");

                    b.Navigation("FiledDisciplinaryActions");

                    b.Navigation("Flags");

                    b.Navigation("NickNameUpdates");

                    b.Navigation("NoticesWritten");

                    b.Navigation("QualificationUpdates");

                    b.Navigation("RankChanges");

                    b.Navigation("RecruitStatus")
                        .IsRequired();

                    b.Navigation("RecruitedByData")
                        .IsRequired();

                    b.Navigation("Recruitments");

                    b.Navigation("SlotUpdates");

                    b.Navigation("SubmittedCShopUpdates");

                    b.Navigation("SubmittedRankUpdates");

                    b.Navigation("TimeUpdates");
                });

            modelBuilder.Entity("FiveOhFirstDataCore.Core.Data.Notice.NoticeBoardData", b =>
                {
                    b.Navigation("Notices");
                });

            modelBuilder.Entity("FiveOhFirstDataCore.Core.Structures.Updates.ClaimUpdate", b =>
                {
                    b.Navigation("Additions");

                    b.Navigation("Removals");
                });
#pragma warning restore 612, 618
        }
    }
}
