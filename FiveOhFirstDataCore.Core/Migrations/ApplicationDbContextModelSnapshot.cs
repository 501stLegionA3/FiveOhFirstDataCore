// <auto-generated />
using System;
using FiveOhFirstDataCore.Core.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FiveOhFirstDataCore.Core.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "6.0.0-preview.3.21201.2")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("FiveOhFirstDataCore.Core.Account.RecruitStatus", b =>
                {
                    b.Property<int>("RecruitStatusKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("ModsInstalled")
                        .HasColumnType("boolean");

                    b.Property<bool>("OverSixteen")
                        .HasColumnType("boolean");

                    b.Property<int>("TrooperId")
                        .HasColumnType("integer");

                    b.HasKey("RecruitStatusKey");

                    b.HasIndex("TrooperId")
                        .IsUnique();

                    b.ToTable("RecruitStatuses");
                });

            modelBuilder.Entity("FiveOhFirstDataCore.Core.Account.Trooper", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("AccessCode")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<long>("CShops")
                        .HasColumnType("bigint");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("DiscordId")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<int?>("Flight")
                        .HasColumnType("integer");

                    b.Property<string>("InitalTraining")
                        .HasColumnType("text");

                    b.Property<DateTime>("LastPromotion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("MedicRank")
                        .HasColumnType("integer");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<int?>("PilotRank")
                        .HasColumnType("integer");

                    b.Property<long>("Qualifications")
                        .HasColumnType("bigint");

                    b.Property<int?>("RTORank")
                        .HasColumnType("integer");

                    b.Property<int>("Rank")
                        .HasColumnType("integer");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<int>("Slot")
                        .HasColumnType("integer");

                    b.Property<DateTime>("StartOfService")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("SteamLink")
                        .HasColumnType("text");

                    b.Property<int?>("Team")
                        .HasColumnType("integer");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UTC")
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<int?>("WardenRank")
                        .HasColumnType("integer");

                    b.Property<int?>("WarrantRank")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("FiveOhFirstDataCore.Core.Account.TrooperRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("FiveOhFirstDataCore.Core.Structures.Updates.CShopChange", b =>
                {
                    b.Property<Guid>("ChangeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<long>("Added")
                        .HasColumnType("bigint");

                    b.Property<int>("ChangedById")
                        .HasColumnType("integer");

                    b.Property<int>("ChangedForId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ChangedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("OldCShops")
                        .HasColumnType("bigint");

                    b.Property<long>("Removed")
                        .HasColumnType("bigint");

                    b.Property<bool>("SubmittedByRosterClerk")
                        .HasColumnType("boolean");

                    b.HasKey("ChangeId");

                    b.HasIndex("ChangedById");

                    b.HasIndex("ChangedForId");

                    b.ToTable("CShopChanges");
                });

            modelBuilder.Entity("FiveOhFirstDataCore.Core.Structures.Updates.QualificationChange", b =>
                {
                    b.Property<Guid>("ChangeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<long>("Added")
                        .HasColumnType("bigint");

                    b.Property<int>("ChangedForId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ChangedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("OldQualifications")
                        .HasColumnType("bigint");

                    b.Property<long>("Removed")
                        .HasColumnType("bigint");

                    b.Property<bool>("Revoked")
                        .HasColumnType("boolean");

                    b.Property<bool>("SubmittedByRosterClerk")
                        .HasColumnType("boolean");

                    b.HasKey("ChangeId");

                    b.HasIndex("ChangedForId");

                    b.ToTable("QualificationChanges");
                });

            modelBuilder.Entity("FiveOhFirstDataCore.Core.Structures.Updates.RankChange", b =>
                {
                    b.Property<Guid>("ChangeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("ChangedById")
                        .HasColumnType("integer");

                    b.Property<int>("ChangedForId")
                        .HasColumnType("integer");

                    b.Property<int>("ChangedFrom")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ChangedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("ChangedTo")
                        .HasColumnType("integer");

                    b.Property<bool>("SubmittedByRosterClerk")
                        .HasColumnType("boolean");

                    b.HasKey("ChangeId");

                    b.HasIndex("ChangedById");

                    b.HasIndex("ChangedForId");

                    b.ToTable("RankChanges");
                });

            modelBuilder.Entity("FiveOhFirstDataCore.Core.Structures.Updates.SlotChange", b =>
                {
                    b.Property<Guid>("ChangeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("ChangedForId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ChangedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("NewFlight")
                        .HasColumnType("integer");

                    b.Property<int?>("NewRole")
                        .HasColumnType("integer");

                    b.Property<int>("NewSlot")
                        .HasColumnType("integer");

                    b.Property<int?>("NewTeam")
                        .HasColumnType("integer");

                    b.Property<int?>("OldFlight")
                        .HasColumnType("integer");

                    b.Property<int?>("OldRole")
                        .HasColumnType("integer");

                    b.Property<int>("OldSlot")
                        .HasColumnType("integer");

                    b.Property<int?>("OldTeam")
                        .HasColumnType("integer");

                    b.Property<bool>("SubmittedByRosterClerk")
                        .HasColumnType("boolean");

                    b.HasKey("ChangeId");

                    b.HasIndex("ChangedForId");

                    b.ToTable("SlotChanges");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("QualificationChangeTrooper", b =>
                {
                    b.Property<int>("InstructorsId")
                        .HasColumnType("integer");

                    b.Property<Guid>("SubmittedQualificationChangesChangeId")
                        .HasColumnType("uuid");

                    b.HasKey("InstructorsId", "SubmittedQualificationChangesChangeId");

                    b.HasIndex("SubmittedQualificationChangesChangeId");

                    b.ToTable("QualificationChangeTrooper");
                });

            modelBuilder.Entity("SlotChangeTrooper", b =>
                {
                    b.Property<int>("ApprovedById")
                        .HasColumnType("integer");

                    b.Property<Guid>("ApprovedSlotChangesChangeId")
                        .HasColumnType("uuid");

                    b.HasKey("ApprovedById", "ApprovedSlotChangesChangeId");

                    b.HasIndex("ApprovedSlotChangesChangeId");

                    b.ToTable("SlotChangeTrooper");
                });

            modelBuilder.Entity("FiveOhFirstDataCore.Core.Account.RecruitStatus", b =>
                {
                    b.HasOne("FiveOhFirstDataCore.Core.Account.Trooper", "Trooper")
                        .WithOne("RecruitStatus")
                        .HasForeignKey("FiveOhFirstDataCore.Core.Account.RecruitStatus", "TrooperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trooper");
                });

            modelBuilder.Entity("FiveOhFirstDataCore.Core.Structures.Updates.CShopChange", b =>
                {
                    b.HasOne("FiveOhFirstDataCore.Core.Account.Trooper", "ChangedBy")
                        .WithMany("SubmittedCShopChanges")
                        .HasForeignKey("ChangedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FiveOhFirstDataCore.Core.Account.Trooper", "ChangedFor")
                        .WithMany("CShopChanges")
                        .HasForeignKey("ChangedForId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChangedBy");

                    b.Navigation("ChangedFor");
                });

            modelBuilder.Entity("FiveOhFirstDataCore.Core.Structures.Updates.QualificationChange", b =>
                {
                    b.HasOne("FiveOhFirstDataCore.Core.Account.Trooper", "ChangedFor")
                        .WithMany("QualificationChanges")
                        .HasForeignKey("ChangedForId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChangedFor");
                });

            modelBuilder.Entity("FiveOhFirstDataCore.Core.Structures.Updates.RankChange", b =>
                {
                    b.HasOne("FiveOhFirstDataCore.Core.Account.Trooper", "ChangedBy")
                        .WithMany("SubmittedRankChanges")
                        .HasForeignKey("ChangedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FiveOhFirstDataCore.Core.Account.Trooper", "ChangedFor")
                        .WithMany("RankChanges")
                        .HasForeignKey("ChangedForId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChangedBy");

                    b.Navigation("ChangedFor");
                });

            modelBuilder.Entity("FiveOhFirstDataCore.Core.Structures.Updates.SlotChange", b =>
                {
                    b.HasOne("FiveOhFirstDataCore.Core.Account.Trooper", "ChangedFor")
                        .WithMany("SlotChanges")
                        .HasForeignKey("ChangedForId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChangedFor");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("FiveOhFirstDataCore.Core.Account.TrooperRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("FiveOhFirstDataCore.Core.Account.Trooper", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("FiveOhFirstDataCore.Core.Account.Trooper", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("FiveOhFirstDataCore.Core.Account.TrooperRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FiveOhFirstDataCore.Core.Account.Trooper", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("FiveOhFirstDataCore.Core.Account.Trooper", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("QualificationChangeTrooper", b =>
                {
                    b.HasOne("FiveOhFirstDataCore.Core.Account.Trooper", null)
                        .WithMany()
                        .HasForeignKey("InstructorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FiveOhFirstDataCore.Core.Structures.Updates.QualificationChange", null)
                        .WithMany()
                        .HasForeignKey("SubmittedQualificationChangesChangeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SlotChangeTrooper", b =>
                {
                    b.HasOne("FiveOhFirstDataCore.Core.Account.Trooper", null)
                        .WithMany()
                        .HasForeignKey("ApprovedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FiveOhFirstDataCore.Core.Structures.Updates.SlotChange", null)
                        .WithMany()
                        .HasForeignKey("ApprovedSlotChangesChangeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FiveOhFirstDataCore.Core.Account.Trooper", b =>
                {
                    b.Navigation("CShopChanges");

                    b.Navigation("QualificationChanges");

                    b.Navigation("RankChanges");

                    b.Navigation("RecruitStatus")
                        .IsRequired();

                    b.Navigation("SlotChanges");

                    b.Navigation("SubmittedCShopChanges");

                    b.Navigation("SubmittedRankChanges");
                });
#pragma warning restore 612, 618
        }
    }
}
