@using FiveOhFirstDataCore.Data.Structures.Updates
@using FiveOhFirstDataCore.Components.Misc
@implements IDisposable
@inject IRosterService _roster
@inject IRefreshRequestService _refresh
@inject IAuthorizationService _auth
@inject IAdvancedRefreshService _advRefresh


@if(Trooper is not null)
{
    <div class="main">
      <div class="info" id="info">
        <h4><RankDisplay Trooper="Trooper" /> @Trooper.BirthNumber @Trooper.NickName @Trooper.BirthdayCake()</h4>
        <div id="time">
          <div class="timein">
            <p class="font-bold">TiS</p>
            <p>@ServiceStrings[0]</p>
            <p>@ServiceStrings[1] DAY(S)</p>
          </div>
          <div class="timein">
            <p class="font-bold">TiG</p>
            <p>@ServiceStrings[2]</p>
            <p>@ServiceStrings[3] DAY(S)</p>
          </div>
        </div>
        <hr />
        <div id="billet">
          <div class="timein">
            <p class="font-bold">@Trooper.Slot.AsFull()</p>
            <p class="font-bold">TiB</p>
            <p>@ServiceStrings[4]</p>
            <p>@ServiceStrings[5] DAY(S)</p>
          </div>
        </div>
        <hr />
        <div class="stuff">
          @if (Superior is not null)
          {
            <p>Superior: <a href="/trooper/@Superior.Id" @onclick="(x) => ChangeTrooper(Superior.Id)">@Superior.NickName</a></p>
          } else
          {
            <p>Superior: TBD</p>
          }

          <p><a href="/squad/@((int)Trooper.Slot)">@Trooper.NickName's Squad</a></p>
          <p><a href="/platoon/@((int)Trooper.Slot.GetPlatoon())">@Trooper.NickName's Platoon</a></p>
          <p><a href="/company/@((int)Trooper.Slot.GetCompany())">@Trooper.NickName's Company</a></p>
          <DynamicAuthorizeView SectionName="Public Trooper Profile Edit Button" IsPage="false">
              <Authorized>
                  <a class="btn btn-primary link-none" href="/c1/roster/edit?edit=@Trooper.Id">Edit</a>
              </Authorized>
          </DynamicAuthorizeView>
        </div>
      </div>
      <div>
        <h4>C-Shops</h4>
        <div class="list-group">
            @foreach(CShop shop in Enum.GetValues(typeof(CShop)))
            {
                if(shop != CShop.None && (Trooper.CShops & shop) == shop)
                {
                    <div class="list-group-item">
                        <h5>@shop.AsFull()</h5>
                        @if(ShopPositions.TryGetValue(shop, out var positions))
                        {
                            <ul>
                                @foreach(var pos in positions)
                                {
                                    <li>@pos.Key @pos.Value</li>
                                }
                            </ul>
                        }
                    </div>
                }
            }
        </div>
      </div>
      <div>
        <h4>Qualifications</h4>
        <div class="qual">
                @foreach(var qual in QualValues)
                {
                    <p>@qual.AsFull()</p>
                }
            </div>
      </div>
      <div>
        <h4>Descriptions</h4>
        <EditForm Context="descriptionFormContext" class="form form-inline" Model="Description">
            <table class="table">
              <thead>
                  <DynamicAuthorizeView SectionName="Public Trooper Display Add Descriptions" IsPage="false">
                      <Authorized>
                                @if(!IsMe())
                                {
                                    <tr>
                                        <td colspan="2">
                                            <InputText @bind-Value="Description.Content" class="form-control" placeholder="Description Contents" />
                                        </td>
                                        <td>
                                            <button class="btn btn-primary" @onclick="SaveDescription">Save</button>
                                        </td>
                                    </tr>              
                                }
                      </Authorized>
                  </DynamicAuthorizeView>
                <tr>
                  <th>Description</th>
                  <th>Date</th>
                  @if(IsMe() || IsNCO){
                      <th>Delete</th>
                  }
                </tr>
              </thead>
              <tbody>
                @foreach (var desc in Trooper.Descriptions)
                    {
                        var d = desc;

                        if(IsMe() || IsNCO)
                        {
                            <tr draggable="true" @ondrag="()=>OnDrag(d)" @ondrop="async () => await OnDrop(d)">
                                <td>@d.Content</td>
                                <td>@d.CreatedOn.ToString("D")</td>
                                <td><button @onclick="async () => await DeleteDescription(d)" class="btn btn-link"><span class="oi oi-trash"></span></button></td>
                            </tr>    
                        }
                        else
                        {
                            <tr draggable="false">
                                <td>@d.Content</td>
                                <td>@d.CreatedOn.ToString("D")</td>
                            </tr>    
                        }
                        }
              </tbody>
            </table>
        </EditForm>
      </div>
      <div>
        <DynamicAuthorizeView SectionName="Public Trooper Display Disciplinary Actions" IsPage="false">
            <Authorized>
                <h4>Disciplinary Actions</h4>
                <table class="table table-hover">
                  <thead>
                    <tr>
                      <th>Filed By</th>
                      <th>Occured On</th>
                      <th>Situation</th>
                    </tr>
                  </thead>
                  <tbody>
                    @foreach (var da in Trooper.DisciplinaryActions)
                    {
                        <tr>
                            <td>@(da.FiledBy?.NickName ?? da.FiledById.ToString())</td>
                            <td>@da.OccurredOn.ToString("g")</td>
                            <td>@da.Situation</td>
                        </tr>
                    }
                  </tbody>
                </table>
            </Authorized>
        </DynamicAuthorizeView>
      </div>
      <div>
        <DynamicAuthorizeView SectionName="Public Trooper Display Flags" IsPage="false">
            <Authorized>
                <h4>Flags</h4>
                <EditForm Context="flagFormContext" class="form form-inline" Model="Flag">
                    <table class="table">
                      <thead>
                                @if(!IsMe())
                                {
                                    <tr>
                                        <td colspan="2">
                                            <InputText @bind-Value="Flag.Contents" class="form-control" placeholder="Flag Contents" />
                                        </td>
                                        <td>
                                            <button class="btn btn-primary" @onclick="SaveFlag">Save</button>
                                        </td>
                                    </tr>
                                }
                        <tr>
                          <th>Author</th>
                          <th>Date</th>
                          <th>Message</th>
                        </tr>
                      </thead>
                      <tbody>
                          @foreach (var flag in Trooper.Flags)
                          {
                              <tr>
                                  <td>@(flag.Author?.NickName ?? flag.AuthorId.ToString())</td>
                                  <td>@flag.CreatedOn.ToString("g")</td>
                                  <td>@flag.Contents</td>
                              </tr>
                          }
                      </tbody>
                    </table>
                </EditForm>
            </Authorized>
        </DynamicAuthorizeView>
      </div>
      <div id="link">
        <DynamicAuthorizeView SectionName="Public Trooper Display Account Links" IsPage="false">
            <Authorized>
                <h4>Links</h4>
                <div class="links">
                  <p>Steam Profile: <a href="https://steamcommunity.com/profiles/@Trooper.SteamLink">@Trooper.SteamLink</a></p>
                  <p>Discord Id: @Trooper.DiscordId</p>
                </div>
            </Authorized>
        </DynamicAuthorizeView>
      </div>
    </div>
}
else
{
    <em>Something went wrong, and a trooper was unabled to be loaded. Go <a href="/">home</a>.</em>
}
