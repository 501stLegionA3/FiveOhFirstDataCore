@inject IImportService _import
@inject IAuthorizationService _auth
@inject IRefreshRequestService _refresh

<EditForm Context="importOrbatDataContext" Model="Import">
    <div class="row">
        <div class="col-lg col-md-12">
            <div class="form-group">
                <label for="importOrbat" class="form-label mt-4">Import Roster .csv</label>
                <InputFile class="form-control" id="importOrbat" @bind-Value="Import.RosterStream" accept=".csv" />
            </div>
        </div>
        <div class="col-lg col-md-12">
            <div class="form-group">
                <label for="importOrbat" class="form-label mt-4">Import Zeta Roster .csv</label>
                <InputFile class="form-control" id="importOrbat" @bind-Value="Import.ZetaRosterStream" accept=".csv" />
            </div>
        </div>
        <div class="col-lg col-md-12">
            <div class="form-group">
                <label for="importOrbat" class="form-label mt-4">Import C-Shop .csv</label>
                <InputFile class="form-control" id="importOrbat"  @bind-Value="Import.CShopStream" accept=".csv" />
            </div>
        </div>
    </div>
    <hr />
    <div class="row">
        <div class="col">
            <button type="button" class="btn btn-block btn-primary" @onclick="ImportDataAsync">Import Data</button>
        </div>
    </div>
</EditForm>

@code {
    public OrbatImport Import { get; set; } = new();

    [CascadingParameter]
    public Task<AuthenticationState> AuthStateTask { get; set; }

    private async Task ImportDataAsync(EventArgs e)
    {
        var claims = (await AuthStateTask).User;

        if((await _auth.AuthorizeAsync(claims, "RequireManager")).Succeeded)
        {
            
        }
        else
        {
            
        }
    }
}
