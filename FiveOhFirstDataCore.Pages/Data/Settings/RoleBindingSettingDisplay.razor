<div class="p-3">
    <div class="d-grid gap-2">
        <button class="btn btn-danger" @onclick="OnRevertAll">Revert Changes</button>
    </div>
</div>

<div class="p-3">
    <h3>Discord Tag Update Message</h3>
</div>
<div class="accordion">
    <div class="accordion-item">
        <h2 class="accordion-header" id="update-header">
            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#update-msg" aria-expanded="false" aria-controls="update-msg">
                Update Message Config
            </button>
        </h2>
        <div id="update-msg" class="accordion-collapse collapse" aria-labelledby="update-header" data-bs-parent="#cshop-claims-accordion">
            <EditForm Model="this" class="p-3">
                <div class="row p-3">
                    <h5>Channel</h5>
                    <StaticDiscordChannelInput Source="DiscordChannels" Item="Channel" />
                </div>
                <div class="row p-3">
                    <h5>Wildcards</h5>
                    <table class="table table-hover table-striped">
                        <tr>
                            <th>Value</th>
                            <th>Replaced With</th>
                        </tr>
                        <tr>
                            <td>{{USER}}</td>
                            <td>Pings the user who a change is applied to.</td>
                        </tr>
                        <tr>
                            <td>{{ROLESADDED}}</td>
                            <td>Writes the name of all added roles.</td>
                        </tr>
                        <tr>
                            <td>{{MENTIONROLESADDED}}</td>
                            <td>Pings all added roles.</td>
                        </tr>
                        <tr>
                            <td>{{ROLESREMOVED}}</td>
                            <td>Writes the name of all removed roles.</td>
                        </tr>
                        <tr>
                            <td>{{MENTIONROLESREMOVED}}</td>
                            <td>Pings all removed roles.</td>
                        </tr>
                        <tr>
                            <td>{{ID}}</td>
                            <td>Writes the Birth Number of a Trooper.</td>
                        </tr>
                        <tr>
                            <td>{{BIRTHNUMBER}}</td>
                            <td>Writes the Birth Number of a Trooper.</td>
                        </tr>
                        <tr>
                            <td>{{RANK}}</td>
                            <td>Writes the Rank of a Trooper.</td>
                        </tr>
                    </table>
                </div>
                <div class="row p-3">
                    <h5>Message</h5>
                    <InputTextArea @bind-Value="RawMessage" placeholder="The message to send to the select channel. Supports wildcards." />
                </div>
                <div class="d-grid gap-2">
                    <button class="btn btn-success" @onclick="SavePostAction">Save</button>
                    <button class="btn btn-danger" @onclick="RevertPostAction">Revert</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>

<div class="p-3">
    <h3>Discord C-Shop Role Bindings</h3>
</div>

@foreach(var i in CShopRoleBindings)
{
    var bind = i;
    if (bind.Parent is not null && bind.Parent.Parent is not null)
    {
        var name = bind.Key.ToString().Replace('.', '-');
        <div class="accordion-item">
            <h2 class="accordion-header" id="">
                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="@($"#body-{name}")" aria-expanded="false" aria-controls="@($"body-{name}")">
                    [@bind.Parent.Parent.Key.AsFull()] @bind.Parent.Id - @bind.Id
                </button>
            </h2>
            <div id="@($"body-{name}")" class="accordion-collapse collapse" aria-labelledby="@($"header-{name}")" data-bs-parent="#cshop-claims-accordion">
                <EditForm Model="bind">
                    <div class="p-3">
                        <div class="input-group">
                            <span class="input-group-text">Key</span>
                            <InputText class="form-control" @bind-Value="bind.Parent.Id" disabled="true" />
                            <span class="input-group-text">Value</span>
                            <InputText class="form-control" @bind-Value="bind.Id" disabled="true" />
                        </div>
                        <div class="row p-3">
                            <h5>Roles</h5>
                            <StaticDiscordRoleInputList Source="DiscordRoles" Items="bind.Roles" />
                        </div>
                        <div class="d-grid gap-2">
                            <button class="btn btn-success" @onclick="async () => await SaveBinding(bind)">Save</button>
                            <button class="btn btn-danger" @onclick="async () => await RevertBinding(bind)">Revert</button>
                        </div>
                    </div>
                </EditForm>
            </div>
        </div>
    }
}

<EditForm Model="this">
    <div class="p-3">
        <h3>Add New C-Shop Binding</h3>
        <InputEnumSelect @bind-Value="CShopCluster" class="form-control" />
        <br />
        @if (CShopCluster is not null
            && CShopClaims.TryGetValue(CShopCluster.Value, out var clust))
        {
            <InputSelect @bind-Value="CShopDept" class="form-control">
                <option value="">N/A</option>
                @foreach (var item in clust.ClaimData)
                {
                    var i = item.Key;
                    <option value="@i">@i</option>
                }
            </InputSelect>
            <br />
            @if(!string.IsNullOrWhiteSpace(CShopDept) 
                && CShopClaims[CShopCluster.Value].ClaimData.TryGetValue(CShopDept, out var items))
            {
            <div class="input-group">
                <InputSelect @bind-Value="NewCShopBindingRaw" class="form-control">
                    <option value="">n/a</option>
                    @foreach (var item in items)
                    {
                        var i = item;
                        if (!CShopRoleBindings.Any(x => x.Id == i && (x.Parent?.Id ?? "") == CShopDept))
                        {
                        <option value="@i">@i</option>
                        }
                    }
                </InputSelect>
                <button class="btn btn-outline-success" @onclick="OnAddNewCShopBinding">Add</button>
            </div>
            }
        }
    </div>
</EditForm>

<hr />

<div class="p-3">
    <h3>Other Discord Role Bindings</h3>
</div>

@foreach(var i in DiscordRoleBindings)
{
    var bind = i;
    var name = bind.Key.Replace('.', '-');
    <div class="accordion-item">
        <h2 class="accordion-header" id="">
            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="@($"#body-{name}")" aria-expanded="false" aria-controls="@($"body-{name}")">
                @bind.Key
            </button>
        </h2>
        <div id="@($"body-{name}")" class="accordion-collapse collapse" aria-labelledby="@($"header-{name}")" data-bs-parent="#cshop-claims-accordion">
            <EditForm Model="bind">
                <div class="p-3">
                    <div class="input-group">
                        <span class="input-group-text">Role Binding</span>
                        <InputText class="form-control" @bind-Value="bind.Key" disabled="true" />
                    </div>
                    <div class="row p-3">
                        <div class="col">
                            <h5>Role Replaces</h5>
                            <StaticDiscordRoleInputList Source="DiscordRoles" Items="bind.RoleReplaces" />
                        </div>
                        <div class="col">
                            <h5>Role Grants</h5>
                            <StaticDiscordRoleInputList Source="DiscordRoles" Items="bind.RoleGrants" />
                        </div>
                    </div>
                    <div class="d-grid gap-2">
                        <button class="btn btn-success" @onclick="async () => await SaveBinding(bind)">Save</button>
                        <button class="btn btn-danger" @onclick="async () => await RevertBinding(bind)">Revert</button>
                    </div>
                </div>
            </EditForm>
        </div>
    </div>
}

<EditForm Model="this">
    <div class="p-3">
        <h3>Add New Binding</h3>
        <div class="input-group">
            <InputSelect @bind-Value="NewDiscordBindingRaw" class="form-control">
                <option value="n/a">n/a</option>
                @foreach(Qualification item in Enum.GetValues<Qualification>())
                {
                    var i = item.AsQualified();
                    if(!DiscordRoleBindings.Any(x => x.Key == i))
                    {
                        <option value="@i">@i</option>
                    }
                }
                @foreach(TrooperRank item in Enum.GetValues<TrooperRank>())
                {
                    var i = item.AsQualified();
                    if(!DiscordRoleBindings.Any(x => x.Key == i))
                    {
                        <option value="@i">@i</option>
                    }
                }
                @foreach(MedicRank item in Enum.GetValues<MedicRank>())
                {
                    var i = item.AsQualified();
                    if(!DiscordRoleBindings.Any(x => x.Key == i))
                    {
                        <option value="@i">@i</option>
                    }
                }
                @foreach(RTORank item in Enum.GetValues<RTORank>())
                {
                    var i = item.AsQualified();
                    if(!DiscordRoleBindings.Any(x => x.Key == i))
                    {
                        <option value="@i">@i</option>
                    }
                }
                @foreach(WarrantRank item in Enum.GetValues<WarrantRank>())
                {
                    var i = item.AsQualified();
                    if(!DiscordRoleBindings.Any(x => x.Key == i))
                    {
                        <option value="@i">@i</option>
                    }
                }
                @foreach(PilotRank item in Enum.GetValues<PilotRank>())
                {
                    var i = item.AsQualified();
                    if(!DiscordRoleBindings.Any(x => x.Key == i))
                    {
                        <option value="@i">@i</option>
                    }
                }
                @foreach(WardenRank item in Enum.GetValues<WardenRank>())
                {
                    var i = item.AsQualified();
                    if(!DiscordRoleBindings.Any(x => x.Key == i))
                    {
                        <option value="@i">@i</option>
                    }
                }
                @foreach(Slot item in Enum.GetValues<Slot>())
                {
                    var i = item.AsQualified();
                    if(!DiscordRoleBindings.Any(x => x.Key == i))
                    {
                        <option value="@i">@i</option>
                    }
                }
                @foreach(Role item in Enum.GetValues<Role>())
                {
                    var i = item.AsQualified();
                    if(!DiscordRoleBindings.Any(x => x.Key == i))
                    {
                        <option value="@i">@i</option>
                    }
                }
            </InputSelect>
            <button class="btn btn-outline-success" @onclick="OnAddNewDiscordBinding">Add</button>
        </div>
    </div>
</EditForm>