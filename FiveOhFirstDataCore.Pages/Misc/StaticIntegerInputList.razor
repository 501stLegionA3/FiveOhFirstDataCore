<EditForm class="form" Model="this">
    @if (Items is not null)
    {
        @for (int c = 0; c < Items.Count; c++)
        {
            var num = c;
            var i = Items[num];
            <div class="input-group">
                <InputNumber @bind-Value="i" class="form-control" disabled="true" />
                <button class="btn btn-outline-danger" type="button" @onclick="x => RemoveValue(num)">Delete</button>
            </div>
            <br /> 
        } 
    }
    <div class="form-group">
        <div class="input-group">
            <InputNumber @bind-Value="NewValue" class="form-control" />
            <button class="btn btn-outline-success" @onclick="AddValue">Add Item</button>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public List<int>? Items { get; set; } = new();
    [Parameter]
    public bool MakeListNullOnEmpty { get; set; } = true;

    public int NewValue { get; set; } = -1;

    public void AddValue()
    {
        if (NewValue > -1)
        {
            if (Items is null) 
                Items = new();
            Items.Add(NewValue);
        }

        NewValue = -1;
    }

    public void RemoveValue(int index)
    {
        if(Items is not null)
        {
            Items.RemoveAt(index);
            if (Items.Count <= 0)
                Items = null;

            StateHasChanged();
        }
    }
}
