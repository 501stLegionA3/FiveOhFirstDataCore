@inject IRosterService _roster
@inject IAdvancedRefreshService _advRefresh
@implements IRefreshBase


@if(Roster is not null)
{
    <RosterListing Troopers="Roster" />
}
else
{
    <em>Loading...</em>
}

@code {
    public List<Trooper> Roster { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);

        if (firstRender)
        {
            _advRefresh.AddDataReloadListener("UserData", OnDataReloadRequests);
            Roster = await _roster.GetInactiveReservesAsync();
            StateHasChanged();
        }
    }

    public async Task CallRefreshRequest()
    {
        await InvokeAsync(StateHasChanged);
    }

    public async Task OnDataReloadRequests()
    {
        Roster = await _roster.GetInactiveReservesAsync();
        await CallRefreshRequest();
    }

    public void Dispose()
    {
        _advRefresh.RemoveDataReloadListener(OnDataReloadRequests);
    }
}
