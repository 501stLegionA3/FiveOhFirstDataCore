@inherits RosterModel

<thead class="text-center table-dark text-light">
    <tr>
        <th colspan="4">
            @SectionNumber.AsOrdinal() Section
        </th>
    </tr>
</thead>
<tbody>
    <tr class="table-warning" role="@(Section.Lead is null ? "" : "button")" @onclick="(x) => TrooperNav(Section.Lead?.Id)">
        <th scope="row" colspan="2" class="text-end">
            Section Leader
        </th>
        <td colspan="2" class="text-start">
            @(Section.Lead?.DisplayRankName() ?? "TBD")
        </td>
    </tr>
    <tr class="table-warning" role="@(Section.RT is null ? "" : "button")" @onclick="(x) => TrooperNav(Section.RT?.Id)">
        <th scope="row" colspan="2" class="text-end">
            Section RT
        </th>
        <td colspan="2" class="text-start">
            @(Section.RT?.DisplayRankName() ?? "TBD")
        </td>
    </tr>

    <tr>
        <th scope="row" class="table-danger text-end" role="@(Section.Teams[0].Lead is null ? "" : "button")" @onclick="(x) => TrooperNav(Section.Teams[0].Lead?.Id)">
            Alpha Team Leader
        </th>
        <td class="table-danger text-start" role="@(Section.Teams[0].Lead is null ? "" : "button")" @onclick="(x) => TrooperNav(Section.Teams[0].Lead?.Id)">
            @(Section.Teams[0].Lead?.DisplayRankName() ?? "TBD")
        </td>
        <th scope="row" class="table-primary text-end" role="@(Section.Teams[1].Lead is null ? "" : "button")" @onclick="(x) => TrooperNav(Section.Teams[1].Lead?.Id)">
            Bravo Team Leader
        </th>
        <td class="table-primary text-start" role="@(Section.Teams[1].Lead is null ? "" : "button")" @onclick="(x) => TrooperNav(Section.Teams[1].Lead?.Id)">
            @(Section.Teams[1].Lead?.DisplayRankName() ?? "TBD")
        </td>
    </tr>
    <tr>
        <th scope="row" class="table-danger text-end" role="@(AT1 is null ? "" : "button")" @onclick="(x) => TrooperNav(AT1?.Id)">
            Alpha Trooper 
        </th>
        <td class="table-danger text-start" role="@(AT1 is null ? "" : "button")" @onclick="(x) => TrooperNav(AT1?.Id)">
            @(AT1?.DisplayRankName() ?? "TBD")
        </td>
        <th scope="row" class="table-primary text-end" role="@(BT1 is null ? "" : "button")" @onclick="(x) => TrooperNav(BT1?.Id)">
            Bravo Trooper
        </th>
        <td class="table-primary text-start" role="@(BT1 is null ? "" : "button")" @onclick="(x) => TrooperNav(BT1?.Id)">
            @(BT1?.DisplayRankName() ?? "TBD")
        </td>
    </tr>

    <tr>
        <th scope="row" class="table-danger text-end" role="@(AT2 is null ? "" : "button")" @onclick="(x) => TrooperNav(AT2?.Id)">
            Alpha Trooper 
        </th>
        <td class="table-danger text-start" role="@(AT2 is null ? "" : "button")" @onclick="(x) => TrooperNav(AT2?.Id)">
            @(AT2?.DisplayRankName() ?? "TBD")
        </td>
        <th scope="row" class="table-primary text-end" role="@(BT2 is null ? "" : "button")" @onclick="(x) => TrooperNav(BT2?.Id)">
            Bravo Trooper
        </th>
        <td class="table-primary text-start" role="@(BT2 is null ? "" : "button")" @onclick="(x) => TrooperNav(BT2?.Id)">
            @(BT2?.DisplayRankName() ?? "TBD")
        </td>
    </tr>

    @for(int i = 0; i < AAdditional.Count && i < BAdditional.Count; i++)
    {
        Trooper AT3 = null;
        if (AAdditional.Count < i)
        {
            AT3 = AAdditional[i];
        }

        Trooper BT3 = null;
        if (BAdditional.Count < i)
        {
            BT3 = BAdditional[i];
        }

        <tr>
            <th scope="row" class="table-danger text-end" role="@(AT3 is null ? "" : "button")" @onclick="(x) => TrooperNav(AT3?.Id)">
                Alpha Trooper 
            </th>
            <td class="table-danger text-start" role="@(AT3 is null ? "" : "button")" @onclick="(x) => TrooperNav(AT3?.Id)">
                @(AT3?.DisplayRankName() ?? "TBD")
            </td>
            <th scope="row" class="table-primary text-end" role="@(BT3 is null ? "" : "button")" @onclick="(x) => TrooperNav(BT3?.Id)">
                Bravo Trooper
            </th>
            <td class="table-primary text-start" role="@(BT3 is null ? "" : "button")" @onclick="(x) => TrooperNav(BT3?.Id)">
                @(BT3?.DisplayRankName() ?? "TBD")
            </td>
        </tr>
    }

    <tr>
        <th scope="row" class="table-danger text-end" role="@(Section.Teams[0].Medic is null ? "" : "button")" @onclick="(x) => TrooperNav(Section.Teams[0].Medic?.Id)">
            Alpha Medic 
        </th>
        <td class="table-danger text-start" role="@(Section.Teams[0].Medic is null ? "" : "button")" @onclick="(x) => TrooperNav(Section.Teams[0].Medic?.Id)">
            @(Section.Teams[0].Medic?.DisplayRankName() ?? "TBD")
        </td>
        <th scope="row" class="table-primary text-end" role="@(Section.Teams[1].Medic is null ? "" : "button")" @onclick="(x) => TrooperNav(Section.Teams[1].Medic?.Id)">
            Bravo Medic
        </th>
        <td class="table-primary text-start" role="@(Section.Teams[1].Medic is null ? "" : "button")" @onclick="(x) => TrooperNav(Section.Teams[1].Medic?.Id)">
            @(Section.Teams[1].Medic?.DisplayRankName() ?? "TBD")
        </td>
    </tr>
</tbody>

@code {
    [Parameter]
    public MynockSectionData Section {get;set;}
    [Parameter]
    public int SectionNumber { get; set; }

    private Trooper? AT1 { get; set; } = null;
    private Trooper? AT2 { get; set; } = null;
    private List<Trooper> AAdditional { get; set; } = new();

    private Trooper? BT1 { get; set; } = null;
    private Trooper? BT2 { get; set; } = null;
    private List<Trooper> BAdditional { get; set; } = new();

    protected override void OnParametersSet()
    {
        base.OnParametersSet();

        int c = 0;
        foreach(var t in Section.Teams[0].Troopers)
        {
            if (c == 0)
                AT1 = t;
            else if (c == 1)
                AT2 = t;
            else
                AAdditional.Add(t);

            c++;
        }

        c = 0;
        foreach(var t in Section.Teams[1].Troopers)
        {
            if (c == 0)
                BT1 = t;
            else if (c == 1)
                BT2 = t;
            else
                BAdditional.Add(t);

            c++;
        }
    }
}
