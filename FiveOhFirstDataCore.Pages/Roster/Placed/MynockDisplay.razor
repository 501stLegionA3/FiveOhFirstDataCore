@inherits RosterModel

<thead>
    <tr>
        <th colspan="4" class="bg-primary text-light text-center">
            501st Legion, 1st Regiment, 3rd Battalion, Bastion Detachment "Mynock"
        </th>
    </tr>
</thead>
<tbody>
    <tr role="@(Mynock.Commander is null ? "" : "button")" @onclick="(x) => TrooperNav(Mynock.Commander?.Id)">
        <th scope="row" colspan="2" class="text-end">
            Detachment Commander
        </th>
        <td colspan="2" class="text-start">
            @(Mynock.Commander?.WarrantRank is null ? Mynock.Commander?.Rank?.AsFull() + " " ?? "" : Mynock.Commander?.WarrantRank?.AsFull() + " " ?? "")@(Mynock.Commander?.NickName ?? "TBD")
        </td>
    </tr>
    <tr role="@(Mynock.NCOIC is null ? "" : "button")" @onclick="(x) => TrooperNav(Mynock.NCOIC?.Id)">
        <th scope="row" colspan="2" class="text-end">
            Detachment NCOIC
        </th>
        <td colspan="2" class="text-start">
            @(Mynock.NCOIC?.WarrantRank is null ? Mynock.NCOIC?.Rank?.AsFull() + " " ?? "" : Mynock.NCOIC?.WarrantRank?.AsFull() + " " ?? "")@(Mynock.NCOIC?.NickName ?? "TBD")
        </td>
    </tr>
    <tr role="@(Mynock.Medic is null ? "" : "button")" @onclick="(x) => TrooperNav(Mynock.Medic?.Id)">
        <th scope="row" colspan="2" class="text-end">
            Detachment Medic
        </th>
        <td colspan="2" class="text-start">
            @(Mynock.Medic?.WarrantRank is null ? Mynock.Medic?.Rank?.AsFull() + " " ?? "" : Mynock.Medic?.WarrantRank?.AsFull() + " " ?? "")@(Mynock.Medic?.NickName ?? "TBD")
        </td>
    </tr>
    <tr role="@(Mynock.RT is null ? "" : "button")" @onclick="(x) => TrooperNav(Mynock.RT?.Id)">
        <th scope="row" colspan="2" class="text-end">
            Detachment RT
        </th>
        <td colspan="2" class="text-start">
            @(Mynock.RT?.WarrantRank is null ? Mynock.RT?.Rank?.AsFull() + " " ?? "" : Mynock.RT?.WarrantRank?.AsFull() + " " ?? "")@(Mynock.RT?.NickName ?? "TBD")
        </td>
    </tr>
</tbody>

@for(int i = 0; i < Mynock.Sections.Length; i++)
{
    <MynockSectionDisplay Section="Mynock.Sections[i]" SectionNumber="i + 1" />
}

@code {
    [Parameter]
    public MynockDetachmentData Mynock { get; set; }
}
