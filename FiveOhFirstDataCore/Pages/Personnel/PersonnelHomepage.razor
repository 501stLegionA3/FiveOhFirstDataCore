@page "/c1"
@inject IRosterService _roster
@inject NavigationManager _nav

<DynamicAuthorizeView SectionName="C1 Home">
    <Authorized>
        <BreadcrumbsList Url="Urls" />
        <div class="container">
            <div class="row text-center">
                <h1 class="col">C-1 PERSONNEL</h1>
            </div>
            <div class="row">
                <div class="col-md-6 col-sm-12 p-2 d-grid gap-2">
                    @*Roster Staff*@
                    <a href="/c1/roster" class="btn btn-primary @(Access[0] ? "" : "disabled")">Roster Staff Home</a>
                </div>
                <div class="col-md-6 col-sm-12 p-2 d-grid gap-2">
                    @*Document Maintenance*@
                    <a href="/c1/docs" class="btn btn-primary @(Access[1] ? "" : "disabled")">Document Maintenance Home</a>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6 col-sm-12 p-2 d-grid gap-2">
                    @*Recruiting*@
                    <a href="/c1/recruiter" class="btn btn-primary @(Access[2] ? "" : "disabled")">Recruiting Staff Home</a>
                </div>
                <div class="col-md-6 col-sm-12 p-2 d-grid gap-2">
                    @*Returning Members*@
                    <a href="/c1/returning" class="btn btn-primary @(Access[3] ? "" : "disabled")">Returning Member Staff Home</a>
                </div>
            </div>
            <div class="row">
                <div class="col p-2 d-grid gap-2">
                    @*Medals*@
                    <a href="/c1/medals" class="btn btn-primary @(Access[4] ? "" : "disabled")">Medals Staff Home</a>
                </div>
            </div>
            @if (!Loaded)
            {
            <NoticeBoard Name="Personnel" 
                         CSHopOverride="CShop.RosterStaff | CShop.DocMainCom | CShop.RecruitingStaff | CShop.ReturningMemberStaff | CShop.MedalsStaff"
                         AllowedAccess="AllowedAccess" />
            }
        </div>
    </Authorized>
    <NotAuthorized>
        <NotAuthorizedMessage />
    </NotAuthorized>
</DynamicAuthorizeView>

@code {
    public List<(string, string)> Urls { get; set; } = new() { ("/", "Home"), ("/c1", "C-1 PERSONNEL") };
    public List<string> AllowedAccess { get; } = new() { "Lead", "Assistant", "C1" };
    public bool Loaded { get; set; } = false;
    public bool[] Access { get; set; } = new bool[] { false, false, false, false, false };
    [CascadingParameter]
    public Task<AuthenticationState> AuthStateTask { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);

        if(firstRender)
        {
            var user = (await AuthStateTask).User;

            Access = await _roster.GetC1PermissionsAsync(user);
        
            Loaded = true;

            StateHasChanged();
        }
    }
}
