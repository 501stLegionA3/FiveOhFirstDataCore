@page "/c1/recruiter"
@inject IUpdateService _update
@inherits PaginationModel

<DynamicAuthorizeView SectionName="Recruting Home">
    <Authorized>
        <BreadcrumbsList Url="Urls" />
        <div class="row">
            <div class="col-md-8 col-sm-12">
                <div class="row text-center">
                    <h1 class="col">Recruiting Home</h1>
                </div>
                <div class="row">
                    <div class="col p-2 d-grid gap-2">
                        <a href="/c1/recruiter/addmember" class="btn btn-primary">New Recruit Form</a>
                    </div>
                </div>
                <div class="row">
                    <div class="col p-2 d-grid gap-2">
                        <a href="/c1/recruiter/unregistered" class="btn btn-success">Unregistered Troopers</a>
                    </div>
                </div>
                <NoticeBoard Name="Recruiter"
                    CSHopOverride="CShop.RecruitingStaff"
                    AllowedAccess="AllowedAccess" />
            </div>
            <div class="col-md-4 col-sm-12 overflow-auto container-fluid">
                @if(Items.Count > 0)
                {
                    <PaginationController Controller="this" />
                }
            
                <h3 class="text-center">Recent Activity</h3>
                @if(Items.Count > 0)
                {
                    Counter = 0;
                    foreach(RecruitmentUpdate c in Items)
                    {

                        <div class="alert alert-success">
                            <b class="mb-0">[@c.RecruitedById] @c.RecruitedBy?.NickName recruited [@c.ChangedForId] @c.ChangedFor?.NickName</b>
                            <br />
                            <small>@c.ChangedOn.ToString("f")</small>
                        </div>
                    }

                    <PaginationController Controller="this" />
                }
            </div>
        </div>
    </Authorized>
    <NotAuthorized>
        <NotAuthorizedMessage />
    </NotAuthorized>
</DynamicAuthorizeView>

@code {
    public List<(string, string)> Urls { get; set; } = new() { ("/", "Home"), ("/c1", "C-1 PERSONNEL"), ("/c1/recruiter", "Recruiter Home") };
    public List<string> AllowedAccess { get; } = new() { "Lead", "Assistant", "C1" };
    public int Counter { get; set; } = 0;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);

        if (firstRender)
        {
            await InitalizeAsync(_update.GetRecruitmentChangesAsync, _update.GetRecruitmentChangesCountAsync);

            StateHasChanged();
        }
    }
}
