@inject IAuthorizationService _auth

<AuthorizeView>
    <Authorized>
        <a href="Identity/Account/Manage">Welcome @Display</a>
        <form method="post" action="Identity/Account/LogOut">
            <button type="submit" class="nav-link btn btn-link">Log out</button>
        </form>
    </Authorized>
    <NotAuthorized>
        <a href="Identity/Account/Register">Register</a>
        <a href="Identity/Account/Login">Log in</a>
    </NotAuthorized>
</AuthorizeView>

@code {
    public string Display { get; set; }
    [CascadingParameter]
    public Task<AuthenticationState> AuthStateTask { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();

        var user = (await AuthStateTask).User;

        Display = user.Claims.FirstOrDefault(x => x.Type == "Display")?.Value ?? "Error: No claim found.";
    }
}